#Для обробки винятків існує оператор try ... except .... Синтаксично, цей оператор розпочинається з ключового слова try: (спробувати) та продовжується блоком коду, в якому ми чекаємо, що може статися помилка.

val = 'a'
try:
    val = int(val)
    #Далі йде блок обробки винятків except (крім), де можна вказати один або більше винятків. Якщо один із зазначених винятків станеться, то виконається наступний блок коду.
#Цей блок не обов'язковий, але найчастіше потрібний. Він виконається, якщо станеться зазначений виняток (один із них, якщо їх декілька).
except ValueError:
    print(f"val {val} is not a number")
#Якщо помилки можуть бути різні і обробляти їх потрібно теж по-різному, то можна додати декілька блоків except, у кожному вказати свою помилку і що робити, якщо вона станеться.
# Потім йде необов'язковий блок, який розпочинається з ключового слова else. Цей код виконається, тільки якщо винятків не сталося.
else:
    print(val > 0)
#Останнім йде необов'язковий блок коду, який розпочинається з ключового слова finally, він виконається у будь-якому разі, незалежно від того, були помилки або ні.
finally:
    print("This will be printed anyway")


# try
#    except
#        else
#           finally

# Основні типи виключень у Python
# SyntaxError — синтаксична помилка.
# IndentationError — помилка, яка виникає, якщо у виділенні блоків інструкцій пробілами припущена помилка.
# TabError виникає, якщо в одному файлі використовувати пробіли і табуляції для виділення блоків інструкцій.
# TypeError виникає, коли операція зі змінною цього типу неможлива.
#ValueError виникає, коли тип операнда відповідний, але значення таке, що операцію неможливо виконати.